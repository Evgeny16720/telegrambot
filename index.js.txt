const express = require('express');
const app = express();
app.use(express.json());

const BOT_TOKEN = '8406574277:AAFwnvVsTRl7sNx2pTqDr7I4O-aVPf-pHnw';

app.get('/', (req, res) => {
  console.log('GET / - Bot status requested');
  res.json({
    status: '✅ Green Family Group Bot Running',
    timestamp: new Date().toISOString(),
    version: '2.0.0'
  });
});

app.post('/webhook', async (req, res) => {
  try {
    console.log('📨 Webhook received:', JSON.stringify(req.body));
    
    const message = req.body?.message;
    if (!message) {
      console.log('No message');
      return res.status(200).send('OK');
    }
    
    const chatId = message.chat.id;
    const chatType = message.chat.type; // 'private', 'group', 'supergroup'
    const text = message.text || '';
    const username = message.from?.username || message.from?.first_name || 'User';
    
    console.log(`Message from ${username} in ${chatType} (${chatId}): "${text}"`);
    
    let responseText = '';
    
    // В группах бот отвечает только на команды или упоминания
    if (text === '/start' || text === '/start@bazaznaniygfbot') {
      responseText = `🌿 Привет! Я Green Family Bot!
      
👥 Работаю в группе: ${message.chat.title || 'Без названия'}
🤖 Готов помогать участникам!
📱 Используйте команды: /help /ping /info`;

    } else if (text === '/help' || text === '/help@bazaznaniygfbot') {
      responseText = `🤖 Команды Green Family Bot:

/start - Приветствие
/help - Эта справка
/ping - Проверка работы
/info - Информация о группе
/about - О компании Green Family

💡 Также можете обратиться: "Бот, [вопрос]"`;

    } else if (text === '/ping' || text === '/ping@bazaznaniygfbot') {
      responseText = `🏓 Понг! 
      
✅ Бот работает нормально
🕒 Время: ${new Date().toLocaleTimeString('ru-RU')}
👥 В группе: ${message.chat.title}`;

    } else if (text === '/info' || text === '/info@bazaznaniygfbot') {
      responseText = `📊 Информация о группе:
      
📝 Название: ${message.chat.title}
🆔 ID: ${chatId}
👥 Тип: ${chatType}
📅 Время: ${new Date().toLocaleString('ru-RU')}`;

    } else if (text === '/about' || text === '/about@bazaznaniygfbot') {
      responseText = `🌿 Green Family - экологичные решения для жизни
      
🏠 Натуральные продукты для дома и семьи
♻️ Забота об экологии и здоровье
💚 Качество проверенное временем`;

    // Отвечаем на упоминания "Бот, ..."
    } else if (text.toLowerCase().startsWith('бот,') || text.toLowerCase().startsWith('bot,')) {
      const question = text.slice(4).trim();
      responseText = `🤖 Вы спросили: "${question}"
      
Я простой тестовый бот Green Family. 
Для полноценной работы используйте команды выше! 😊`;

    // В группах НЕ отвечаем на обычные сообщения (чтобы не спамить)
    } else if (chatType === 'private' && text) {
      // Только в приватных чатах отвечаем на всё
      responseText = `Вы написали: "${text}"
      
🤖 Я тестовый бот Green Family!
Используйте /help для списка команд.`;
    }
    
    if (responseText) {
      await sendMessage(chatId, responseText);
      console.log('✅ Response sent');
    } else {
      console.log('ℹ️ No response needed (group message without command)');
    }
    
    return res.status(200).send('OK');
    
  } catch (error) {
    console.error('❌ Webhook error:', error);
    return res.status(200).send('OK');
  }
});

async function sendMessage(chatId, text) {
  try {
    const fetch = (await import('node-fetch')).default;
    
    const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML'
      })
    });
    
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}`);
    }
    
    console.log('Message sent successfully');
    
  } catch (error) {
    console.error('Send message error:', error);
    throw error;
  }
}

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`🚀 Green Family Group Bot running on port ${PORT}`);
  console.log(`📅 Started: ${new Date().toISOString()}`);
});

module.exports = app;
