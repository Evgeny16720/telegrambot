const express = require('express');
const app = express();
app.use(express.json({ limit: '10mb' }));

const BOT_TOKEN = '8406574277:AAFwnvVsTRl7sNx2pTqDr7I4O-aVPf-pHnw';

// Главная страница
app.get('/', (req, res) => {
  console.log('✅ GET request received');
  res.json({
    status: 'Green Family Bot is WORKING',
    timestamp: new Date().toISOString(),
    version: '3.0'
  });
});

// Webhook
app.post('/webhook', async (req, res) => {
  console.log('🔥 WEBHOOK RECEIVED!', new Date().toISOString());
  console.log('📊 Body:', JSON.stringify(req.body, null, 2));
  
  try {
    const message = req.body?.message;
    if (!message) {
      console.log('❌ No message found');
      return res.status(200).send('OK - no message');
    }
    
    const chatId = message.chat.id;
    const text = message.text || '';
    const username = message.from?.username || message.from?.first_name || 'User';
    
    console.log(`👤 FROM: ${username}, CHAT: ${chatId}, TEXT: "${text}"`);
    
    // Простые ответы на все
    let responseText = '';
    
    if (text.includes('/start')) {
      responseText = '🚀 БОТ РАБОТАЕТ!\n\n✅ Webhook подключен\n📱 Vercel активен\n🎉 Все системы в норме!';
    } else if (text.includes('/help')) {
      responseText = '🤖 Команды:\n/start - тест\n/help - помощь\n\nЛюбой текст - эхо ответ';
    } else if (text) {
      responseText = `✅ Получено: "${text}"\n\n🤖 Бот работает!\n🕐 ${new Date().toLocaleTimeString()}`;
    } else {
      responseText = '🤖 Привет! Отправьте текст для проверки.';
    }
    
    console.log('📤 SENDING RESPONSE:', responseText.slice(0, 50) + '...');
    
    // Отправляем ответ
    await sendTelegramMessage(chatId, responseText);
    
    console.log('✅ RESPONSE SENT SUCCESSFULLY!');
    return res.status(200).send('OK');
    
  } catch (error) {
    console.error('💥 CRITICAL ERROR:', error);
    console.error('Stack:', error.stack);
    return res.status(200).send('OK'); // Всегда 200 для Telegram
  }
});

// Отправка в Telegram
async function sendTelegramMessage(chatId, text) {
  try {
    console.log(`📞 Calling Telegram API for chat ${chatId}...`);
    
    const fetch = (await import('node-fetch')).default;
    
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
    const payload = {
      chat_id: chatId,
      text: text,
      parse_mode: 'HTML'
    };
    
    console.log('📡 Telegram URL:', url);
    console.log('📦 Payload:', JSON.stringify(payload));
    
    const response = await fetch(url, {
      method: 'POST',
      headers: { 
        'Content-Type': 'application/json',
        'User-Agent': 'GreenFamilyBot/1.0'
      },
      body: JSON.stringify(payload),
      timeout: 30000
    });
    
    const responseText = await response.text();
    
    console.log('📈 Telegram Response Status:', response.status);
    console.log('📄 Telegram Response Body:', responseText);
    
    if (!response.ok) {
      throw new Error(`Telegram API Error ${response.status}: ${responseText}`);
    }
    
    const data = JSON.parse(responseText);
    if (!data.ok) {
      throw new Error(`Telegram Error: ${data.description}`);
    }
    
    console.log('✅ Message sent to Telegram successfully!');
    return data;
    
  } catch (error) {
    console.error('💥 Telegram send error:', error);
    throw error;
  }
}

// Обработка ошибок
process.on('uncaughtException', (error) => {
  console.error('💥 Uncaught Exception:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('💥 Unhandled Rejection:', reason);
});

// Запуск
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`🚀 Green Family Bot server STARTED on port ${PORT}`);
  console.log(`📅 Time: ${new Date().toISOString()}`);
  console.log(`🌐 Environment: ${process.env.NODE_ENV || 'development'}`);
});

module.exports = app;
